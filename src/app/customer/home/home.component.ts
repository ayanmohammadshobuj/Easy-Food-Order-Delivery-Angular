import {Component, OnInit} from '@angular/core';
import {HeaderComponent} from "./header/header.component";
import {Categories} from "../models/categories";
import {PaginatorProducts, Products} from "../models/products";
import {HttpClient} from "@angular/common/http";
import {ProductService} from "../service/products.service";
import {CartService} from "../service/carts.service";
import {CategoryService} from "../service/categories.service";
import {Router, RouterLink} from "@angular/router";
import {Carts} from "../models/carts";
import {FormsModule} from "@angular/forms";

@Component({
  selector: 'app-home',
  standalone: true,
  imports: [
    FormsModule,
    RouterLink
  ],
  templateUrl: './home.component.html',
  styleUrl: './home.component.css'
})
export class HomeComponent implements OnInit{
  categories: Categories[] = [];
  products: PaginatorProducts = {data: []};
  selectedItem: Products | null = null;
  quantity: number = 1;

  constructor(
    private http: HttpClient,
    private productService: ProductService,
    private cartService: CartService,
    private categoryService: CategoryService,
    private productServices: ProductService,
    private router: Router
  ) {
  }

  ngOnInit(): void {
    this.productService
      .getProducts()
      .subscribe((response: PaginatorProducts) => {
        this.products = response;
      });

    this.categoryService.getCategories().subscribe((response: Categories[]) => {
      this.categories = response;
    });
  }

  // previousPage() {
  //   this.productService
  //     .getProducts()
  //     .subscribe((response: PaginatorProducts) => {
  //       this.products = response;
  //     });
  // }
  //
  // nextPage() {
  //   this.productService
  //     .getProducts()
  //     .subscribe((response: PaginatorProducts) => {
  //       this.products = response;
  //     });
  // }
  //
  // gotoPage() {
  //   this.productService
  //     .getProducts()
  //     .subscribe((response: PaginatorProducts) => {
  //       this.products = response;
  //     });
  // }
  //
  // productPaginate(product: ProductService) {
  //   let apiUrl = 'http://localhost:3000/categories?_page=1&_per_page=3';
  //   return apiUrl;
  // }
  //
  // categoriesData() {
  //   this.categoryService.getCategories().subscribe((response: Categories[]) => {
  //     this.categories = response;
  //     console.log(this.categories);
  //   });
  // }
  //
  // // selectItem(item: Products): void {
  // //   this.selectedItem = item;
  // // }

  selectItem(item: Products): void {
    this.selectedItem = item;
    this.quantity = 1; // Reset quantity each time a new product is selected
  }

  addToCart(productId: number, quantity: number, thumbnail: string) {
    const newCartItem = {
      cartId: 0, // Set cartId to 0 or handle this as needed (e.g., auto-generated by backend)
      userId: 1001, // Replace with the actual userId
      products: [{productId, quantity, thumbnail}],
      total: quantity * this.selectedItem!.price, // Assuming total is based on the selected item's price
    };

    this.cartService.addCart(newCartItem).subscribe((response: Carts) => {
      // alert('Cart updated:');
      alert('Cart updated:');

      console.log('Cart updated:', response);
    });
  }

}
